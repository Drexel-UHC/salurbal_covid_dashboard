setwd("C:/Users/rl627/Desktop/Git/SALURBAL COVID19 Dashbaord (Private)/Data")
setwd("C:/Users/rl627/Desktop/Git/SALURBAL COVID19 Dashbaord (Private)/Data")
setwd("C:/Users/rl627/Desktop/Git/SALURBAL COVID19 Dashbaord (Private)/Data")
salurbal_covid19_update = function(){
## 0. Setup -----
{
library(stringr)
rm(list = ls())
cpu_RL = (str_detect(getwd(),"ranli"))
cpu_UHC = !cpu_RL
if (cpu_UHC) {
setwd("C:/Users/rl627/Desktop/Git/SALURBAL COVID19 Dashbaord (Private)/Data")
} else { setwd("C:/Users/ranli/Desktop/Git local/SALURBAL COVID-19 Dashboard/Data") }
}
## 1. Clean data -----
{
task0 = try ({ source("code_salurbal_data_downloader.R")}) %>% as.character()
task1 = try ({ source("code_salurbal_data_updater.R")}) %>% as.character()
}
## 2. Save Files -----
{
if (str_detect(getwd(),"Dev")){
print("Step 2: Save to Dev")
### Save Static
save(
countries_salurbal,other_central_countries,other_south_countries,
other_carribean_countries,other_lac_countries,lac_countries,minc,mind,
countries_references,countries_interest,col_rolling,
country_coords,
sf_world,salurbal_l1_sf,sf_salurbal_0.8,
xwalk_data_cum_rate_cleaned,xwalk_data_titles,xwalk_data_rate_cleaned,xwalk_data_rate,xwalk_salid,
tidy.data.all.old,
file = "../App (Development)/covid19_processed_data_static.rdata")
### Save Dynamic
save(
df_map_data,map_global_totals,subset_dates_tmp,
choices_df,
tidy.data.all.new,
file = "../App (Development)/covid19_processed_data_dynamic.rdata")
} else {
print("Step 2: Save to Clean")
### Save Static
save(
countries_salurbal,other_central_countries,other_south_countries,
other_carribean_countries,other_lac_countries,lac_countries,minc,mind,
countries_references,countries_interest,col_rolling,
country_coords,
sf_world,salurbal_l1_sf,sf_salurbal_0.8,
xwalk_data_cum_rate_cleaned,xwalk_data_titles,xwalk_data_rate_cleaned,xwalk_data_rate,xwalk_salid,
tidy.data.all.old,
file = "../App (Production)/covid19_processed_data_static.rdata")
### Save Data
save(
countries_salurbal,other_central_countries,other_south_countries,
other_carribean_countries,other_lac_countries,lac_countries,minc,mind,
countries_references,countries_interest,col_rolling,
country_coords,
sf_world,salurbal_l1_sf,sf_salurbal_0.8,
xwalk_data_cum_rate_cleaned,xwalk_data_titles,xwalk_data_rate_cleaned,xwalk_data_rate,xwalk_salid,
tidy.data.all.old,
file = "../Clean/covid19_processed_data_static.rdata")
save(
df_map_data,map_global_totals,subset_dates_tmp,
choices_df,
tidy.data.all.new,
file = "../Clean/covid19_processed_data_dynamic.rdata")
### Push if no error and after 10PM
if ( (!any(str_detect(task1, "Error")))&
(format(Sys.time(),"%H")>14)&
(file.size("../Clean/covid19_processed_data_dynamic.rdata")<970000)) {
print("Step 2: Push to GitHub")
git2r::config(user.name = "rl627",user.email = "rl627@drexel.edu")
git2r::config()
gitstatus()
gitadd()
gitcommit()
gitpush()
}
}
}
## 3. Send Email ----
if(cpu_RL){
library(tableHTML)
library(RDCOMClient)
library(tidyverse)
df_update_status = read.csv("../Clean/status_log.csv") %>% select(Country, Status,Date)
error_rows = df_update_status %>%
mutate(n = row_number()) %>%
filter(str_detect(Status, "rror")) %>%
pull(n)
html_table_tmp = df_update_status  %>%
tableHTML(rownames = F,
widths = c(150,150,150)) %>%
add_css_row(css = list('color', 'red'), rows =error_rows+1)
## Write Email
subject_tmp = ifelse(any(str_detect(df_update_status$Status,"Error")),
paste0("SALURBAL COVID Data Update ",
Sys.Date() %>% format("%b %d, %Y"),
"; ERROR in pipeline"),
paste0("SALURBAL COVID Data Update ",
Sys.Date() %>% format("%b %d, %Y"))
)
body_tmp  = ifelse(any(str_detect(df_update_status$Status,"Error")),
str_c(
"Hi SALURBAL COVID-19 Team,<br/><br/>",
"This is a biweekly automated email to keep track of our data updates. There was an error in the daily update process which scheduled at ",
Sys.time() %>% format("%I:%M %p %b %d, %Y."),
" Please see the table below for details.<br/><br/>",
html_table_tmp,
"<br/><br/>Thanks,<br/>Ran"
),
str_c(
"Hi SALURBAL COVID-19 Team,<br/><br/>",
"This is a biweekly automated email to keep track of our data updates.
Please see the table below for details about the data update for ",
Sys.time() %>% format("%I:%M %p %b %d, %Y."),
"<br/><br/>",
html_table_tmp,
"<br/><br/>Thanks,<br/>Ran"
)
)
## Send email (Daily to self and Weekly to group)
library (RDCOMClient)
Outlook <- COMCreate("Outlook.Application")
Email = Outlook$CreateItem(0)
Email[["to"]] = ifelse((format(Sys.Date(),"%a")%in%c("Wed"))&
(format(Sys.time(),"%H")>=17)&
(!str_detect(getwd(),"Development") ),
"rl627@drexel.edu;ub45@drexel.edu;jlk465@drexel.edu;",
"rl627@drexel.edu")
Email[["cc"]] = ""
Email[["bcc"]] = ""
Email[["subject"]] = subject_tmp
Email[["htmlbody"]] = body_tmp
Email$Send()
rm(Outlook, Email)
}
}
salurbal_covid19_update()
library(tableHTML)
library(RDCOMClient)
library(tidyverse)
df_update_status = read.csv("../Clean/status_log.csv") %>% select(Country, Status,Date)
error_rows = df_update_status %>%
mutate(n = row_number()) %>%
filter(str_detect(Status, "rror")) %>%
pull(n)
html_table_tmp = df_update_status  %>%
tableHTML(rownames = F,
widths = c(150,150,150)) %>%
add_css_row(css = list('color', 'red'), rows =error_rows+1)
## Write Email
subject_tmp = ifelse(any(str_detect(df_update_status$Status,"Error")),
paste0("SALURBAL COVID Data Update ",
Sys.Date() %>% format("%b %d, %Y"),
"; ERROR in pipeline"),
paste0("SALURBAL COVID Data Update ",
Sys.Date() %>% format("%b %d, %Y"))
)
body_tmp  = ifelse(any(str_detect(df_update_status$Status,"Error")),
str_c(
"Hi SALURBAL COVID-19 Team,<br/><br/>",
"This is a biweekly automated email to keep track of our data updates. There was an error in the daily update process which scheduled at ",
Sys.time() %>% format("%I:%M %p %b %d, %Y."),
" Please see the table below for details.<br/><br/>",
html_table_tmp,
"<br/><br/>Thanks,<br/>Ran"
),
str_c(
"Hi SALURBAL COVID-19 Team,<br/><br/>",
"This is a biweekly automated email to keep track of our data updates.
Please see the table below for details about the data update for ",
Sys.time() %>% format("%I:%M %p %b %d, %Y."),
"<br/><br/>",
html_table_tmp,
"<br/><br/>Thanks,<br/>Ran"
)
)
## Send email (Daily to self and Weekly to group)
library (RDCOMClient)
Outlook <- COMCreate("Outlook.Application")
Email = Outlook$CreateItem(0)
ifelse((format(Sys.Date(),"%a")%in%c("Wed"))&
(format(Sys.time(),"%H")>=17)&
(!str_detect(getwd(),"Development") ),
"rl627@drexel.edu;ub45@drexel.edu;jlk465@drexel.edu;",
"rl627@drexel.edu")
Email[["to"]] = ifelse((format(Sys.Date(),"%a")%in%c("Wed"))&
(format(Sys.time(),"%H")>=17)&
(!str_detect(getwd(),"Development") ),
"rl627@drexel.edu;ub45@drexel.edu;jlk465@drexel.edu;",
"rl627@drexel.edu")
Email[["cc"]] = ""
Email[["bcc"]] = ""
Email[["subject"]] = subject_tmp
Email[["htmlbody"]] = body_tmp
Email$Send()
rm(Outlook, Email)
# 0. Setup  -------
{
rm(list=ls()[ !str_detect(ls(), c("cpu_RL|cpu_UHC|df_update_status")) ])
options(timeout=144000)
source("code_salurbal_data_updater_util.R")
### Clear previous tmp_files
file.remove(list.files("tmp_files/", full.names = T))
file.remove("tmp_zipped_file.zip")
}
# 1. Auto Download  -------
{
df_salurbal_covid_links = read.csv("SALURBAL_COVID19_sources.csv") %>%
as_tibble() %>%
filter(auto)
df_auto = pmap_df(list(df_salurbal_covid_links$country,
df_salurbal_covid_links$url,
df_salurbal_covid_links$output_name),
function(a,b,c){salurbal_download(a,b,c)})
}
# # # ## Guatemala
# "Confirmados po municipio fecha de emision "
url_cases = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/"
download.file(url_cases,destfile = "raw_files/gt_cases_tmp.csv")
# "tamizados  por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/"
download.file(url_deaths,destfile = "raw_files/gt_tests_tmp.csv")
# "Fallecidos por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/session/d9a0f30eaa0e4bd2a21316224f978e08/download/fallecidosFF?w=9861ff1c"
download.file(url_deaths,destfile = "raw_files/gt_deaths_tmp.csv")
# "tamizados  por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/session/d9a0f30eaa0e4bd2a21316224f978e08/download/tamizadosFER?w=9861ff1c"
# # # ## Guatemala
# "Confirmados po municipio fecha de emision "
url_cases = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/session/d9a0f30eaa0e4bd2a21316224f978e08/download/confirmadosFER?w=9861ff1c"
download.file(url_cases,destfile = "raw_files/gt_cases_tmp.csv")
# "Confirmados po municipio fecha de emision "
url_cases = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/session/d9a0f30eaa0e4bd2a21316224f978e08/download/confirmadosFER?w=9861ff1c"
download.file(url_cases,destfile = "raw_files/gt_cases_tmp.csv")
# "tamizados  por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/session/d9a0f30eaa0e4bd2a21316224f978e08/download/tamizadosFER?w=9861ff1c"
download.file(url_deaths,destfile = "raw_files/gt_tests_tmp.csv")
# "Fallecidos por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/session/d9a0f30eaa0e4bd2a21316224f978e08/download/fallecidosFF?w=9861ff1c"
download.file(url_deaths,destfile = "raw_files/gt_deaths_tmp.csv")
# # # ## Guatemala
# "Confirmados po municipio fecha de emision "
url_cases = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/session/d9a0f30eaa0e4bd2a21316224f978e08/download/confirmadosFER?w=9861ff1c"
download.file(url_cases,destfile = "raw_files/gt_cases_tmp.csv")
# # # ## Guatemala
# "Confirmados po municipio fecha de emision "
url_cases = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/session/d9a0f30eaa0e4bd2a21316224f978e08/download/confirmadosFER?w=9861ff1c"
download.file(url_cases,destfile = "raw_files/gt_cases_tmp.csv")
# "tamizados  por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/session/d9a0f30eaa0e4bd2a21316224f978e08/download/tamizadosFER?w=9861ff1c"
download.file(url_deaths,destfile = "raw_files/gt_tests_tmp.csv")
# "Fallecidos por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_9861ff1c/session/d9a0f30eaa0e4bd2a21316224f978e08/download/fallecidosFF?w=9861ff1c"
download.file(url_deaths,destfile = "raw_files/gt_deaths_tmp.csv")
# # # ## Guatemala
# "Confirmados po municipio fecha de emision "
url_cases = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_5edd3278/"
download.file(url_cases,destfile = "raw_files/gt_cases_tmp.csv")
# # # ## Guatemala
# "Confirmados po municipio fecha de emision "
url_cases = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_5edd3278/session/01802cfed13ba08adc7e1f6bac0a23d6/download/confirmadosFER?w=5edd3278"
# # # ## Guatemala
# "Confirmados po municipio fecha de emision "
url_cases = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_5edd3278/session/01802cfed13ba08adc7e1f6bac0a23d6/download/confirmadosFER?w=5edd3278"
download.file(url_cases,destfile = "raw_files/gt_cases_tmp.csv")
# "tamizados  por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_5edd3278/session/01802cfed13ba08adc7e1f6bac0a23d6/download/tamizadosFER?w=5edd3278"
download.file(url_deaths,destfile = "raw_files/gt_tests_tmp.csv")
# "Fallecidos por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_5edd3278/session/01802cfed13ba08adc7e1f6bac0a23d6/download/fallecidosFF?w=5edd3278"
download.file(url_deaths,destfile = "raw_files/gt_deaths_tmp.csv")
# "Fallecidos por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_5edd3278/session/01802cfed13ba08adc7e1f6bac0a23d6/download/fallecidosFF?w=5edd3278"
download.file(url_deaths,destfile = "raw_files/gt_deaths_tmp.csv")
download.file(url_deaths,destfile = "raw_files/gt_deaths_tmp.csv")
# # # ## Guatemala
# # "Confirmados po municipio fecha de emision "
# url_cases = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_5edd3278/session/01802cfed13ba08adc7e1f6bac0a23d6/download/confirmadosFER?w=5edd3278"
# download.file(url_cases,destfile = "raw_files/gt_cases_tmp.csv")
# # "tamizados  por municipio"
# url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_5edd3278/session/01802cfed13ba08adc7e1f6bac0a23d6/download/tamizadosFER?w=5edd3278"
# download.file(url_deaths,destfile = "raw_files/gt_tests_tmp.csv")
# # "Fallecidos por municipio"
url_deaths = "https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98/_w_5edd3278/session/bd3aa080231977afb2c9233f68d5ed05/download/fallecidosFF?w=800bc962"
download.file(url_deaths,destfile = "raw_files/gt_deaths_tmp.csv")
